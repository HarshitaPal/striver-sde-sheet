//Day 1
question 1(sort 0,1,2)
class Solution {
public:
   
        void sortColors(vector<int>& nums) {
    int zero =0, l = 0, r = nums.size()-1;
    while (l <= r) {
        if (nums[l] == 0) 
            swap(nums[l++], nums[zero++]);
        else if (nums[l] == 2) 
            swap(nums[l], nums[r--]);
        else
            l++;
    }
}
    
};

question 2(stock buy and sell)
class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int maxiprofit=0;
        int mini=prices[0];

        int size =prices.size();
        for(int i=1;i<size;i++){
          
            mini =min(mini,prices[i]);
            
            maxiprofit=max(maxiprofit,prices[i]-mini);
        }
        return maxiprofit;
    }
};
     ques 3(kadane's algorithm)
     class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int maxsum =INT_MIN;
        int currsum =0;
    
        for(int i =0;i<nums.size();i++){
            currsum+=nums[i];
            if(currsum>maxsum)
            maxsum=currsum;
            
            if(currsum<0)
             currsum=0;
        }
        return maxsum;
    }
};
